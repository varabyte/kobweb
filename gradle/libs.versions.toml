[versions]
kobweb = "0.20.4"
#------------------------
commonmark = "0.24.0"
compose = "1.7.3"
dokka = "2.0.0"
gradle-publish = "1.3.0"
janino = "3.1.12"
jsoup = "1.16.2"
kaml = "0.60.0"
kotlin = "2.1.10"
kotlinpoet = "1.14.2"
kotlinx-coroutines = "1.8.1"
kotlinx-html = "0.12.0"
kotlinx-serialization = "1.7.1"
ksp = "2.1.10-1.0.30"
ktor = "3.1.0"
logback = "1.5.15"
playwright = "1.50.0"
shadow = "8.3.0"
truthish = "1.0.2"

[libraries]
commonmark-core = { module = "org.commonmark:commonmark", version.ref = "commonmark" }
commonmark-autolink = { module = "org.commonmark:commonmark-ext-autolink", version.ref = "commonmark" }
commonmark-frontmatter = { module = "org.commonmark:commonmark-ext-yaml-front-matter", version.ref = "commonmark" }
commonmark-tables = { module = "org.commonmark:commonmark-ext-gfm-tables", version.ref = "commonmark" }
commonmark-tasklist = { module = "org.commonmark:commonmark-ext-task-list-items", version.ref = "commonmark" }
compose-html-core = { module = "org.jetbrains.compose.html:html-core", version.ref = "compose" }
compose-compiler-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
dokka-plugin = { module = "org.jetbrains.dokka:org.jetbrains.dokka.gradle.plugin", version.ref = "dokka" }
gradle-publish-plugin = { module = "com.gradle.plugin-publish:com.gradle.plugin-publish.gradle.plugin", version.ref = "gradle-publish" }
janino = { module = "org.codehaus.janino:janino", version.ref = "janino" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlin-multiplatform-plugin = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "kotlinx-html" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ksp-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
ksp-processing = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-caching-headers = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-forwarded-header = { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-sse = { module = "io.ktor:ktor-server-sse", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
playwright = { module = "com.microsoft.playwright:playwright", version.ref = "playwright" }
truthish = { module = "com.varabyte.truthish:truthish", version.ref = "truthish" }

[bundles]
commonmark = ["commonmark-core", "commonmark-autolink", "commonmark-frontmatter", "commonmark-tables", "commonmark-tasklist"]
ktor = [
    "ktor-serialization-json",
    "ktor-server-auth",
    "ktor-server-caching-headers",
    "ktor-server-content-negotiation",
    "ktor-server-compression",
    "ktor-server-core",
    "ktor-server-cors",
    "ktor-server-default-headers",
    "ktor-server-forwarded-header",
    "ktor-server-host-common",
    "ktor-server-netty",
    "ktor-server-sse",
    "ktor-server-websockets",
]
logback = [
    "logback",
    "janino", # for <if> conditions in logback.xml
]

[plugins]
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
